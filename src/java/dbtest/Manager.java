
package dbtest;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "Manager", targetNamespace = "http://dbTest/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Manager {


    /**
     * 
     * @return
     *     returns java.util.List<dbtest.InformationMeeting>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "loadMeetings", targetNamespace = "http://dbTest/", className = "dbtest.LoadMeetings")
    @ResponseWrapper(localName = "loadMeetingsResponse", targetNamespace = "http://dbTest/", className = "dbtest.LoadMeetingsResponse")
    public List<InformationMeeting> loadMeetings();

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "citizenConfig", targetNamespace = "http://dbTest/", className = "dbtest.CitizenConfig")
    @ResponseWrapper(localName = "citizenConfigResponse", targetNamespace = "http://dbTest/", className = "dbtest.CitizenConfigResponse")
    public boolean citizenConfig(
        @WebParam(name = "arg0", targetNamespace = "")
        Citizen arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addEmergency", targetNamespace = "http://dbTest/", className = "dbtest.AddEmergency")
    @ResponseWrapper(localName = "addEmergencyResponse", targetNamespace = "http://dbTest/", className = "dbtest.AddEmergencyResponse")
    public void addEmergency(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        Timestamp arg2);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "checkUser", targetNamespace = "http://dbTest/", className = "dbtest.CheckUser")
    @ResponseWrapper(localName = "checkUserResponse", targetNamespace = "http://dbTest/", className = "dbtest.CheckUserResponse")
    public boolean checkUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "existAp", targetNamespace = "http://dbTest/", className = "dbtest.ExistAp")
    @ResponseWrapper(localName = "existApResponse", targetNamespace = "http://dbTest/", className = "dbtest.ExistApResponse")
    public boolean existAp(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns dbtest.Appointment
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "returnAp", targetNamespace = "http://dbTest/", className = "dbtest.ReturnAp")
    @ResponseWrapper(localName = "returnApResponse", targetNamespace = "http://dbTest/", className = "dbtest.ReturnApResponse")
    public Appointment returnAp(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "createUser", targetNamespace = "http://dbTest/", className = "dbtest.CreateUser")
    @ResponseWrapper(localName = "createUserResponse", targetNamespace = "http://dbTest/", className = "dbtest.CreateUserResponse")
    public void createUser(
        @WebParam(name = "arg0", targetNamespace = "")
        User arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "addSubscriber", targetNamespace = "http://dbTest/", className = "dbtest.AddSubscriber")
    @ResponseWrapper(localName = "addSubscriberResponse", targetNamespace = "http://dbTest/", className = "dbtest.AddSubscriberResponse")
    public void addSubscriber(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "saveAppointment", targetNamespace = "http://dbTest/", className = "dbtest.SaveAppointment")
    @ResponseWrapper(localName = "saveAppointmentResponse", targetNamespace = "http://dbTest/", className = "dbtest.SaveAppointmentResponse")
    public void saveAppointment(
        @WebParam(name = "arg0", targetNamespace = "")
        Appointment arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns dbtest.User
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUser", targetNamespace = "http://dbTest/", className = "dbtest.GetUser")
    @ResponseWrapper(localName = "getUserResponse", targetNamespace = "http://dbTest/", className = "dbtest.GetUserResponse")
    public User getUser(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
